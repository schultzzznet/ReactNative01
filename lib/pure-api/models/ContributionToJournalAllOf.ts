/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CaseNote } from './CaseNote';
import { ConferenceSeriesRef } from './ConferenceSeriesRef';
import { EventRef } from './EventRef';
import { JournalAssociation } from './JournalAssociation';
import { HttpFile } from '../http/http';

export class ContributionToJournalAllOf {
    'event'?: EventRef;
    /**
    * The pages of the host publication covered by this contribution, for example 10-15.
    */
    'pages'?: string;
    /**
    * The volume that the research output was published in.
    */
    'volume'?: string;
    'journalAssociation'?: JournalAssociation;
    /**
    * The article number.
    */
    'articleNumber'?: string;
    /**
    * The issue number of the journal the research output is published in.
    */
    'journalNumber'?: string;
    /**
    * A collection of court case notes related to this research output.
    */
    'caseNotes'?: Array<CaseNote>;
    'conferenceSeries'?: ConferenceSeriesRef;
    /**
    * The number of pages in the research output.
    */
    'numberOfPages'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "event",
            "baseName": "event",
            "type": "EventRef",
            "format": ""
        },
        {
            "name": "pages",
            "baseName": "pages",
            "type": "string",
            "format": ""
        },
        {
            "name": "volume",
            "baseName": "volume",
            "type": "string",
            "format": ""
        },
        {
            "name": "journalAssociation",
            "baseName": "journalAssociation",
            "type": "JournalAssociation",
            "format": ""
        },
        {
            "name": "articleNumber",
            "baseName": "articleNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "journalNumber",
            "baseName": "journalNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "caseNotes",
            "baseName": "caseNotes",
            "type": "Array<CaseNote>",
            "format": ""
        },
        {
            "name": "conferenceSeries",
            "baseName": "conferenceSeries",
            "type": "ConferenceSeriesRef",
            "format": ""
        },
        {
            "name": "numberOfPages",
            "baseName": "numberOfPages",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return ContributionToJournalAllOf.attributeTypeMap;
    }
    
    public constructor() {
    }
}

