/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IdAllOf } from './IdAllOf';
import { Identifier } from './Identifier';
import { HttpFile } from '../http/http';

/**
* An external ID
*/
export class Id extends Identifier {
    /**
    * Pure database ID of the object
    */
    'pureId'?: number;
    /**
    * Name of the external source
    */
    'idSource': string;
    /**
    * External ID
    */
    'value': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "pureId",
            "baseName": "pureId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "idSource",
            "baseName": "idSource",
            "type": "string",
            "format": ""
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(Id.attributeTypeMap);
    }
    
    public constructor() {
        super();
        this.typeDiscriminator = "Id";
    }
}

