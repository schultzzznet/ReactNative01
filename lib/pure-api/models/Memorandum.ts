/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AdditionalFileElectronicVersion } from './AdditionalFileElectronicVersion';
import { ArticleProcessingCharge } from './ArticleProcessingCharge';
import { BookSeriesJournalAssociation } from './BookSeriesJournalAssociation';
import { ClassificationRef } from './ClassificationRef';
import { ClassifiedLocalizedValue } from './ClassifiedLocalizedValue';
import { ContributionToMemorandumAllOf } from './ContributionToMemorandumAllOf';
import { ContributorAssociation } from './ContributorAssociation';
import { ElectronicVersion } from './ElectronicVersion';
import { ExternalOrganizationRef } from './ExternalOrganizationRef';
import { FormattedString } from './FormattedString';
import { Identifier } from './Identifier';
import { KeywordGroup } from './KeywordGroup';
import { Link } from './Link';
import { OrganizationRef } from './OrganizationRef';
import { PublicationSeries } from './PublicationSeries';
import { PublicationStatus } from './PublicationStatus';
import { ResearchOutput } from './ResearchOutput';
import { Visibility } from './Visibility';
import { Workflow } from './Workflow';
import { HttpFile } from '../http/http';

/**
* A memorandum or exposition.
*/
export class Memorandum extends ResearchOutput {
    'applicant'?: ExternalOrganizationRef;
    /**
    * The project number.
    */
    'projectNumber'?: string;
    /**
    * The journal number.
    */
    'journalNumber'?: string;
    /**
    * The date finished.
    */
    'dateFinished'?: Date;
    /**
    * The number of pages in the research output.
    */
    'numberOfPages'?: number;
    /**
    * The publication series this research output is part of.
    */
    'publicationSeries'?: Array<PublicationSeries>;
    /**
    * The book series this research output is part of.
    */
    'bookSeries'?: Array<BookSeriesJournalAssociation>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "applicant",
            "baseName": "applicant",
            "type": "ExternalOrganizationRef",
            "format": ""
        },
        {
            "name": "projectNumber",
            "baseName": "projectNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "journalNumber",
            "baseName": "journalNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "dateFinished",
            "baseName": "dateFinished",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "numberOfPages",
            "baseName": "numberOfPages",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "publicationSeries",
            "baseName": "publicationSeries",
            "type": "Array<PublicationSeries>",
            "format": ""
        },
        {
            "name": "bookSeries",
            "baseName": "bookSeries",
            "type": "Array<BookSeriesJournalAssociation>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(Memorandum.attributeTypeMap);
    }
    
    public constructor() {
        super();
        this.typeDiscriminator = "Memorandum";
    }
}

