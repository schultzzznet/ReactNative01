/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CERIFAddress } from './CERIFAddress';
import { ClassificationRef } from './ClassificationRef';
import { ClassifiedFile } from './ClassifiedFile';
import { Document } from './Document';
import { Identifier } from './Identifier';
import { KeywordGroup } from './KeywordGroup';
import { Link } from './Link';
import { Visibility } from './Visibility';
import { Workflow } from './Workflow';
import { HttpFile } from '../http/http';

/**
* An organization external to the institution
*/
export class ExternalOrganization {
    /**
    * Pure database ID of the object, prefer using the UUID if it is present on the entity
    */
    'pureId'?: number;
    /**
    * UUID, this is the primary identity of the entity
    */
    'uuid'?: string;
    /**
    * Username of creator
    */
    'createdBy'?: string;
    /**
    * Date and time of creation
    */
    'createdDate'?: Date;
    /**
    * Username of the user that performed a modification
    */
    'modifiedBy'?: string;
    /**
    * Date and time of last modification
    */
    'modifiedDate'?: Date;
    /**
    * URL of the content on the Pure Portal
    */
    'portalUrl'?: string;
    /**
    * All pretty URLs
    */
    'prettyUrlIdentifiers'?: Array<string>;
    /**
    * UUIDs of other content items which have been merged into this content item (or similar)
    */
    'previousUuids'?: Array<string>;
    /**
    * Signals that the information is maintained by synchronization from an external system
    */
    'externallyManaged'?: boolean;
    /**
    * A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.
    */
    'version'?: string;
    /**
    * A set of localized string values each for a specific submission locale. Please note that invalid locale values will be ignored.
    */
    'name'?: { [key: string]: string; };
    'type'?: ClassificationRef;
    /**
    * Nature of the organizations work
    */
    'natureTypes'?: Array<ClassificationRef>;
    /**
    * Acronym of organization name
    */
    'acronym'?: string;
    /**
    * Alternative names of organization
    */
    'alternativeNames'?: Array<string>;
    /**
    * IDs that this object corresponds to in external systems. Such as a Scopus ID. Used by Pure where it is necessary to identify objects to specific external systems
    */
    'identifiers'?: Array<Identifier>;
    'address'?: CERIFAddress;
    /**
    * Phone number
    */
    'phoneNumber'?: string;
    /**
    * Phone number (mobile)
    */
    'mobilePhoneNumber'?: string;
    /**
    * Fax number
    */
    'fax'?: string;
    /**
    * Email address
    */
    'email'?: string;
    /**
    * Bank account number
    */
    'bankAccountNumber'?: string;
    /**
    * VAT number
    */
    'vatNumber'?: string;
    /**
    * Arbitrary documents relevant to the organization
    */
    'documents'?: Array<Document>;
    /**
    * External organization image
    */
    'images'?: Array<ClassifiedFile>;
    /**
    * Links to information about the organization
    */
    'links'?: Array<Link>;
    /**
    * A group for each type of keyword present
    */
    'keywordGroups'?: Array<KeywordGroup>;
    /**
    * A free-form note about the organization
    */
    'note'?: string;
    'visibility'?: Visibility;
    'workflow'?: Workflow;
    /**
    * The content system name
    */
    'systemName'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "pureId",
            "baseName": "pureId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "createdBy",
            "baseName": "createdBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "modifiedBy",
            "baseName": "modifiedBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "portalUrl",
            "baseName": "portalUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "prettyUrlIdentifiers",
            "baseName": "prettyUrlIdentifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "previousUuids",
            "baseName": "previousUuids",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "externallyManaged",
            "baseName": "externallyManaged",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ClassificationRef",
            "format": ""
        },
        {
            "name": "natureTypes",
            "baseName": "natureTypes",
            "type": "Array<ClassificationRef>",
            "format": ""
        },
        {
            "name": "acronym",
            "baseName": "acronym",
            "type": "string",
            "format": ""
        },
        {
            "name": "alternativeNames",
            "baseName": "alternativeNames",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "identifiers",
            "baseName": "identifiers",
            "type": "Array<Identifier>",
            "format": ""
        },
        {
            "name": "address",
            "baseName": "address",
            "type": "CERIFAddress",
            "format": ""
        },
        {
            "name": "phoneNumber",
            "baseName": "phoneNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "mobilePhoneNumber",
            "baseName": "mobilePhoneNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "fax",
            "baseName": "fax",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": "email"
        },
        {
            "name": "bankAccountNumber",
            "baseName": "bankAccountNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "vatNumber",
            "baseName": "vatNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "documents",
            "baseName": "documents",
            "type": "Array<Document>",
            "format": ""
        },
        {
            "name": "images",
            "baseName": "images",
            "type": "Array<ClassifiedFile>",
            "format": ""
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>",
            "format": ""
        },
        {
            "name": "keywordGroups",
            "baseName": "keywordGroups",
            "type": "Array<KeywordGroup>",
            "format": ""
        },
        {
            "name": "note",
            "baseName": "note",
            "type": "string",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "Visibility",
            "format": ""
        },
        {
            "name": "workflow",
            "baseName": "workflow",
            "type": "Workflow",
            "format": ""
        },
        {
            "name": "systemName",
            "baseName": "systemName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ExternalOrganization.attributeTypeMap;
    }
    
    public constructor() {
    }
}

