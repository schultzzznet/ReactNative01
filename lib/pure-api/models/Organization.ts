/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClassificationRef } from './ClassificationRef';
import { ClassifiedAddress } from './ClassifiedAddress';
import { ClassifiedFile } from './ClassifiedFile';
import { ClassifiedLocalizedValue } from './ClassifiedLocalizedValue';
import { ClassifiedValue } from './ClassifiedValue';
import { DateRange } from './DateRange';
import { Identifier } from './Identifier';
import { KeywordGroup } from './KeywordGroup';
import { OrganizationRef } from './OrganizationRef';
import { PersonRef } from './PersonRef';
import { Visibility } from './Visibility';
import { HttpFile } from '../http/http';

/**
* An organization in the institution
*/
export class Organization {
    /**
    * Pure database ID of the object, prefer using the UUID if it is present on the entity
    */
    'pureId'?: number;
    /**
    * UUID, this is the primary identity of the entity
    */
    'uuid'?: string;
    /**
    * Username of creator
    */
    'createdBy'?: string;
    /**
    * Date and time of creation
    */
    'createdDate'?: Date;
    /**
    * Username of the user that performed a modification
    */
    'modifiedBy'?: string;
    /**
    * Date and time of last modification
    */
    'modifiedDate'?: Date;
    /**
    * URL of the content on the Pure Portal
    */
    'portalUrl'?: string;
    /**
    * All pretty URLs
    */
    'prettyUrlIdentifiers'?: Array<string>;
    /**
    * UUIDs of other content items which have been merged into this content item (or similar)
    */
    'previousUuids'?: Array<string>;
    /**
    * A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.
    */
    'version'?: string;
    /**
    * A set of string values, one for each submission locale. Note: invalid locale values will be ignored.
    */
    'name'?: { [key: string]: string; };
    'type'?: ClassificationRef;
    /**
    * IDs that this object corresponds to in external systems. Such as a Scopus ID. Used by Pure where it is necessary to identify objects to specific external systems
    */
    'identifiers'?: Array<Identifier>;
    /**
    * A list of organization name variants
    */
    'nameVariants'?: Array<ClassifiedLocalizedValue>;
    /**
    * A list of organization profile information entries
    */
    'profileInformations'?: Array<ClassifiedLocalizedValue>;
    /**
    * A list of organization photos
    */
    'photos'?: Array<ClassifiedFile>;
    /**
    * A list of organization addresses
    */
    'addresses'?: Array<ClassifiedAddress>;
    /**
    * A list of organization phone numbers
    */
    'phoneNumbers'?: Array<ClassifiedValue>;
    /**
    * A list of organization email addresses
    */
    'emails'?: Array<ClassifiedValue>;
    /**
    * A list of organization web addresses
    */
    'webAddresses'?: Array<ClassifiedLocalizedValue>;
    'lifecycle'?: DateRange;
    'takenOverBy'?: OrganizationRef;
    /**
    * A list of parent organizations
    */
    'parents'?: Array<OrganizationRef>;
    /**
    * A list of organization contact persons
    */
    'contactPersons'?: Array<PersonRef>;
    /**
    * A group for each type of keyword present
    */
    'keywordGroups'?: Array<KeywordGroup>;
    /**
    * A list of cost center classifications
    */
    'costCenters'?: Array<ClassificationRef>;
    'visibility'?: Visibility;
    /**
    * The content system name
    */
    'systemName'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "pureId",
            "baseName": "pureId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "createdBy",
            "baseName": "createdBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "modifiedBy",
            "baseName": "modifiedBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "portalUrl",
            "baseName": "portalUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "prettyUrlIdentifiers",
            "baseName": "prettyUrlIdentifiers",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "previousUuids",
            "baseName": "previousUuids",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ClassificationRef",
            "format": ""
        },
        {
            "name": "identifiers",
            "baseName": "identifiers",
            "type": "Array<Identifier>",
            "format": ""
        },
        {
            "name": "nameVariants",
            "baseName": "nameVariants",
            "type": "Array<ClassifiedLocalizedValue>",
            "format": ""
        },
        {
            "name": "profileInformations",
            "baseName": "profileInformations",
            "type": "Array<ClassifiedLocalizedValue>",
            "format": ""
        },
        {
            "name": "photos",
            "baseName": "photos",
            "type": "Array<ClassifiedFile>",
            "format": ""
        },
        {
            "name": "addresses",
            "baseName": "addresses",
            "type": "Array<ClassifiedAddress>",
            "format": ""
        },
        {
            "name": "phoneNumbers",
            "baseName": "phoneNumbers",
            "type": "Array<ClassifiedValue>",
            "format": ""
        },
        {
            "name": "emails",
            "baseName": "emails",
            "type": "Array<ClassifiedValue>",
            "format": ""
        },
        {
            "name": "webAddresses",
            "baseName": "webAddresses",
            "type": "Array<ClassifiedLocalizedValue>",
            "format": ""
        },
        {
            "name": "lifecycle",
            "baseName": "lifecycle",
            "type": "DateRange",
            "format": ""
        },
        {
            "name": "takenOverBy",
            "baseName": "takenOverBy",
            "type": "OrganizationRef",
            "format": ""
        },
        {
            "name": "parents",
            "baseName": "parents",
            "type": "Array<OrganizationRef>",
            "format": ""
        },
        {
            "name": "contactPersons",
            "baseName": "contactPersons",
            "type": "Array<PersonRef>",
            "format": ""
        },
        {
            "name": "keywordGroups",
            "baseName": "keywordGroups",
            "type": "Array<KeywordGroup>",
            "format": ""
        },
        {
            "name": "costCenters",
            "baseName": "costCenters",
            "type": "Array<ClassificationRef>",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "Visibility",
            "format": ""
        },
        {
            "name": "systemName",
            "baseName": "systemName",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Organization.attributeTypeMap;
    }
    
    public constructor() {
    }
}

