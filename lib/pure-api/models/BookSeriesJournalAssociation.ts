/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ISSNRef } from './ISSNRef';
import { JournalRef } from './JournalRef';
import { JournalTitleRef } from './JournalTitleRef';
import { HttpFile } from '../http/http';

/**
* A relation describing the association between a book series and the associated journal.
*/
export class BookSeriesJournalAssociation {
    /**
    * Pure database ID of the object, prefer using the UUID if it is present on the entity
    */
    'pureId'?: number;
    'title'?: JournalTitleRef;
    'issn'?: ISSNRef;
    'journal': JournalRef;
    'no'?: string;
    'volume'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "pureId",
            "baseName": "pureId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "JournalTitleRef",
            "format": ""
        },
        {
            "name": "issn",
            "baseName": "issn",
            "type": "ISSNRef",
            "format": ""
        },
        {
            "name": "journal",
            "baseName": "journal",
            "type": "JournalRef",
            "format": ""
        },
        {
            "name": "no",
            "baseName": "no",
            "type": "string",
            "format": ""
        },
        {
            "name": "volume",
            "baseName": "volume",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BookSeriesJournalAssociation.attributeTypeMap;
    }
    
    public constructor() {
    }
}

