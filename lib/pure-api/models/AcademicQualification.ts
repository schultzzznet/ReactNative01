/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClassificationRef } from './ClassificationRef';
import { CompoundDateRange } from './CompoundDateRange';
import { OrganizationOrExternalOrganizationRef } from './OrganizationOrExternalOrganizationRef';
import { HttpFile } from '../http/http';

/**
* An object mapping the data of an education received by a person
*/
export class AcademicQualification {
    /**
    * Pure database ID of the object, prefer using the UUID if it is present on the entity
    */
    'pureId'?: number;
    /**
    * Date that the education was awarded at.
    */
    'awardDate'?: Date;
    'period'?: CompoundDateRange;
    'fieldOfStudy'?: ClassificationRef;
    /**
    * A set of string values, one for each submission locale. Note: invalid locale values will be ignored.
    */
    'fieldOfStudyUnstructured'?: { [key: string]: string; };
    'organization'?: OrganizationOrExternalOrganizationRef;
    /**
    * A set of string values, one for each submission locale. Note: invalid locale values will be ignored.
    */
    'projectTitle'?: { [key: string]: string; };
    'qualification'?: ClassificationRef;
    /**
    * A set of string values, one for each submission locale. Note: invalid locale values will be ignored.
    */
    'qualificationUnstructured'?: { [key: string]: string; };

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "pureId",
            "baseName": "pureId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "awardDate",
            "baseName": "awardDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "period",
            "baseName": "period",
            "type": "CompoundDateRange",
            "format": ""
        },
        {
            "name": "fieldOfStudy",
            "baseName": "fieldOfStudy",
            "type": "ClassificationRef",
            "format": ""
        },
        {
            "name": "fieldOfStudyUnstructured",
            "baseName": "fieldOfStudyUnstructured",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "organization",
            "baseName": "organization",
            "type": "OrganizationOrExternalOrganizationRef",
            "format": ""
        },
        {
            "name": "projectTitle",
            "baseName": "projectTitle",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "qualification",
            "baseName": "qualification",
            "type": "ClassificationRef",
            "format": ""
        },
        {
            "name": "qualificationUnstructured",
            "baseName": "qualificationUnstructured",
            "type": "{ [key: string]: string; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AcademicQualification.attributeTypeMap;
    }
    
    public constructor() {
    }
}

