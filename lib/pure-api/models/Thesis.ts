/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AdditionalFileElectronicVersion } from './AdditionalFileElectronicVersion';
import { ArticleProcessingCharge } from './ArticleProcessingCharge';
import { BookSeriesJournalAssociation } from './BookSeriesJournalAssociation';
import { ClassificationRef } from './ClassificationRef';
import { ClassifiedLocalizedValue } from './ClassifiedLocalizedValue';
import { ContributorAssociation } from './ContributorAssociation';
import { ElectronicVersion } from './ElectronicVersion';
import { ExternalOrganizationRef } from './ExternalOrganizationRef';
import { FormattedString } from './FormattedString';
import { Identifier } from './Identifier';
import { KeywordGroup } from './KeywordGroup';
import { Link } from './Link';
import { OrganizationOrExternalOrganizationRef } from './OrganizationOrExternalOrganizationRef';
import { OrganizationRef } from './OrganizationRef';
import { PublicationSeries } from './PublicationSeries';
import { PublicationStatus } from './PublicationStatus';
import { PublisherRef } from './PublisherRef';
import { ResearchOutput } from './ResearchOutput';
import { SupervisorAssociation } from './SupervisorAssociation';
import { ThesisAllOf } from './ThesisAllOf';
import { Visibility } from './Visibility';
import { Workflow } from './Workflow';
import { HttpFile } from '../http/http';

/**
* A thesis.
*/
export class Thesis extends ResearchOutput {
    /**
    * The place of publication.
    */
    'placeOfPublication'?: string;
    /**
    * The number of pages in the research output.
    */
    'numberOfPages'?: number;
    /**
    * The edition that the production was published in.
    */
    'edition'?: string;
    /**
    * The ISBN number for the printed versions of the production.
    */
    'printISBNs'?: Array<string>;
    /**
    * The ISBN number for the electronic versions of the production.
    */
    'electronicISBNs'?: Array<string>;
    'publisher'?: PublisherRef;
    /**
    * The volume that the research output was published in.
    */
    'volume'?: string;
    /**
    * The publication series this research output is part of.
    */
    'publicationSeries'?: Array<PublicationSeries>;
    /**
    * The book series this research output is part of.
    */
    'bookSeries'?: Array<BookSeriesJournalAssociation>;
    'qualification'?: ClassificationRef;
    /**
    * The awarding institution.
    */
    'awardingInstitutions'?: Array<OrganizationOrExternalOrganizationRef>;
    /**
    * A collection of organisational unit affiliations associated with supervisors of this research output.
    */
    'supervisorOrganisations'?: Array<OrganizationRef>;
    /**
    * A collection of external organisation affiliations associated with supervisors of this research output.
    */
    'supervisorExternalOrganisations'?: Array<ExternalOrganizationRef>;
    /**
    * The supervisors of this research output.
    */
    'supervisors'?: Array<SupervisorAssociation>;
    /**
    * The sponsors of this research output.
    */
    'sponsors'?: Array<ExternalOrganizationRef>;
    'awardDate'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "placeOfPublication",
            "baseName": "placeOfPublication",
            "type": "string",
            "format": ""
        },
        {
            "name": "numberOfPages",
            "baseName": "numberOfPages",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "edition",
            "baseName": "edition",
            "type": "string",
            "format": ""
        },
        {
            "name": "printISBNs",
            "baseName": "printISBNs",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "electronicISBNs",
            "baseName": "electronicISBNs",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "publisher",
            "baseName": "publisher",
            "type": "PublisherRef",
            "format": ""
        },
        {
            "name": "volume",
            "baseName": "volume",
            "type": "string",
            "format": ""
        },
        {
            "name": "publicationSeries",
            "baseName": "publicationSeries",
            "type": "Array<PublicationSeries>",
            "format": ""
        },
        {
            "name": "bookSeries",
            "baseName": "bookSeries",
            "type": "Array<BookSeriesJournalAssociation>",
            "format": ""
        },
        {
            "name": "qualification",
            "baseName": "qualification",
            "type": "ClassificationRef",
            "format": ""
        },
        {
            "name": "awardingInstitutions",
            "baseName": "awardingInstitutions",
            "type": "Array<OrganizationOrExternalOrganizationRef>",
            "format": ""
        },
        {
            "name": "supervisorOrganisations",
            "baseName": "supervisorOrganisations",
            "type": "Array<OrganizationRef>",
            "format": ""
        },
        {
            "name": "supervisorExternalOrganisations",
            "baseName": "supervisorExternalOrganisations",
            "type": "Array<ExternalOrganizationRef>",
            "format": ""
        },
        {
            "name": "supervisors",
            "baseName": "supervisors",
            "type": "Array<SupervisorAssociation>",
            "format": ""
        },
        {
            "name": "sponsors",
            "baseName": "sponsors",
            "type": "Array<ExternalOrganizationRef>",
            "format": ""
        },
        {
            "name": "awardDate",
            "baseName": "awardDate",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(Thesis.attributeTypeMap);
    }
    
    public constructor() {
        super();
        this.typeDiscriminator = "Thesis";
    }
}

