/**
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * OpenAPI spec version: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class KeywordGroup {
    /**
    * Pure database ID of the object, prefer using the UUID if it is present on the entity
    */
    'pureId'?: number;
    /**
    * A KeywordGroup type discriminator property so we can differentiate between the different sub-types, this is the schema type name of the child type.
    */
    'typeDiscriminator': string;
    /**
    * Unique name of the configuration that specifies this keyword group
    */
    'logicalName': string;
    /**
    * A set of localized string values each for a specific submission locale. Please note that invalid locale values will be ignored.
    */
    'name'?: { [key: string]: string; };

    static readonly discriminator: string | undefined = "typeDiscriminator";

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "pureId",
            "baseName": "pureId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "typeDiscriminator",
            "baseName": "typeDiscriminator",
            "type": "string",
            "format": ""
        },
        {
            "name": "logicalName",
            "baseName": "logicalName",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "{ [key: string]: string; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return KeywordGroup.attributeTypeMap;
    }
    
    public constructor() {
        this.typeDiscriminator = "KeywordGroup";
    }
}

